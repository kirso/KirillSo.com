---
import BaseLayout from "./Base.astro";
import BlogHeader from "@/components/BlogHeader.astro";
import {
	getPreviousAndNextPosts,
	blogLinksFromFrontmatter,
	sortMDByDate,
} from "src/util";
import Paginator from "@/components/Paginator.astro";

const {
	content: { title, description, publishDate, tags, astro },
} = Astro.props;
const datetime = new Date(publishDate).toISOString();
const currentPage = new URL(Astro.request.url).pathname;
const allPosts = await Astro.glob("../pages/posts/*.md");
const allPostLinks = blogLinksFromFrontmatter(sortMDByDate(allPosts));
const { prev, next } = getPreviousAndNextPosts(currentPage, allPostLinks);
const paginationProps = {
	...(prev && {
		prevUrl: {
			url: prev.url,
			text: `← ${prev.title}`,
			srLabel: " Previous Article:",
		},
	}),
	...(next && {
		nextUrl: {
			url: next.url,
			text: `${next.title} →`,
			srLabel: "Next Article:",
		},
	}),
};
---

<BaseLayout meta={{ title, description }}>
	<BlogHeader slot="header" headers={astro.headers} />
	<article class="max-w-[65ch]">
		<h1 class="title text-accent">{title}</h1>
		<span
			class="flex flex-col space-y-2 md:flex-row md:items-center md:space-y-0 md:divide-x md:divide-textColor"
		>
			<time {datetime} class="pr-2">{publishDate}</time>
			{tags?.length && (
				<div class="flex items-center md:pl-2">
					<svg
						aria-hidden="true"
						xmlns="http://www.w3.org/2000/svg"
						class="w-6 h-6"
						viewBox="0 0 24 24"
						stroke-width="1.5"
						stroke="currentColor"
						fill="none"
						stroke-linecap="round"
						stroke-linejoin="round"
					>
						<path stroke="none" d="M0 0h24v24H0z" fill="none" />
						<path d="M7.859 6h-2.834a2.025 2.025 0 0 0 -2.025 2.025v2.834c0 .537 .213 1.052 .593 1.432l6.116 6.116a2.025 2.025 0 0 0 2.864 0l2.834 -2.834a2.025 2.025 0 0 0 0 -2.864l-6.117 -6.116a2.025 2.025 0 0 0 -1.431 -.593z" />
						<path d="M17.573 18.407l2.834 -2.834a2.025 2.025 0 0 0 0 -2.864l-7.117 -7.116" />
						<path d="M6 9h-.01" />
					</svg>
					<ul class="flex items-center ml-1 space-x-2">
						{tags.map((tag) => (
							<li>
								<a
									class="inline-block cactus-link"
									aria-label={`View more blogs with the tag ${tag}`}
									href={`/tags/${tag}`}
								>
									&#35;{tag}
								</a>
							</li>
						))}
					</ul>
				</div>
			)}
		</span>
		<p class="mt-8">{description}</p>
		<div class="mt-12 prose-headings:font-semibold prose prose-sm prose-cactus">
			<slot></slot>
		</div>
		<div class="mt-24">
			<Paginator {...paginationProps} />
		</div>
	</article>
</BaseLayout>

<style>
	:global(.heading-wrapper) {
		@apply relative;
	}

	:global(.heading-wrapper .anchor-link) {
		@apply text-accent after:hidden absolute -left-5 top-1;
	}
</style>
