---
import BaseLayout from "./Base.astro";
import BlogHeader from "@/components/BlogHeader.astro";
import { getPreviousAndNextPosts, blogLinksFromFrontmatter, sortMDByDate } from "src/util";

const { content: { title, description, publishDate, tags, astro } } = Astro.props;
const datetime = new Date(publishDate).toISOString();
const currentPage = new URL(Astro.request.url).pathname;
const allPosts = await Astro.glob('../pages/posts/*.md');
const allPostLinks = blogLinksFromFrontmatter(sortMDByDate(allPosts));
const { prev, next } = getPreviousAndNextPosts(currentPage, allPostLinks);
const hasPrevOrNext = prev || next;
---

<BaseLayout {title} {description}>
	<BlogHeader slot='header' headers={astro.headers} />
	<article class="max-w-[65ch]">
		<h1 class="text-xl font-semibold text-accent">{title}</h1>
		<span class="flex flex-col space-y-2 md:space-y-0 md:items-center md:flex-row md:divide-x md:divide-text">
			<time {datetime} class="pr-2">{publishDate}</time>
			{tags?.length && (
			<div class="flex items-center md:pl-2">
				<svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6" viewBox="0 0 24 24" stroke-width="1.5"
					stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
					<path stroke="none" d="M0 0h24v24H0z" fill="none" />
					<path
						d="M7.859 6h-2.834a2.025 2.025 0 0 0 -2.025 2.025v2.834c0 .537 .213 1.052 .593 1.432l6.116 6.116a2.025 2.025 0 0 0 2.864 0l2.834 -2.834a2.025 2.025 0 0 0 0 -2.864l-6.117 -6.116a2.025 2.025 0 0 0 -1.431 -.593z" />
					<path d="M17.573 18.407l2.834 -2.834a2.025 2.025 0 0 0 0 -2.864l-7.117 -7.116" />
					<path d="M6 9h-.01" />
				</svg>
				<ul class="flex items-center ml-1 space-x-2">
					{tags.map(tag => <li>&#35;{tag}</li>)}
				</ul>
			</div>
			)}
		</span>
		<p class="mt-8">{description}</p>
		<div class="mt-12 prose prose-sm prose-headings:font-semibold prose-cactus">
			<slot />
		</div>
		{hasPrevOrNext && (<nav class="flex items-center mt-24">
			{prev && (<a href={prev.url} class="mr-auto hover:text-accent">← {prev.title}</a>)}
			{next && (<a href={next.url} class="ml-auto hover:text-accent">{next.title} →</a>)}
		</nav>)}
	</article>
</BaseLayout>

<style>
	:global(.heading-wrapper) {
		@apply relative;
	}

	:global(.heading-wrapper .anchor-link) {
		@apply text-accent after:hidden absolute -left-5 top-1;
	}
</style>